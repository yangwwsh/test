<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="apigw_apirequestrouting_apiresult" xml:lang="en-us">
<title>Response preparation<ph rev="rev760"/></title>
<shortdesc>The <ph conref="apigw_conref.dita#common/apigw"/> runs the API result action
to prepare responses to the client based on the result from the API execute action.</shortdesc>
<conbody>
<p>The API result action examines whether the result of the API execute action contains unhandled errors:<ul>
<li>If yes, the API result action prepares a JSON error object and sends the object to the client as
the response. The error object takes the following format:
<codeblock>{ "name": &lt;error name>, "message": &lt;error message> }</codeblock><!--The current design is that we only return JSON fault messages. However, the design may change to result dependent on 'produces' of the operation. 
When the producible MIME type is binary, the error object takes the following format:  <error name>: <error message>. 
When the producible MIME type is SOAP, the error object takes the following format: 
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">
<SOAP-ENV:Header/>
<SOAP-ENV:Body>
  <SOAP-ENV:Fault>
    <faultcode> error name </faultcode>
    <faultstring> error message </faultstring>
  </SOAP-ENV:Fault>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>--></li>
<li>If no, the API result action reads the API context and uses the variables
<codeph>message.body</codeph>, <codeph>message.headers</codeph>,
<codeph>message.status.code</codeph>, and <codeph>message.status.reason</codeph> to compose the
response to the client.</li>
</ul></p>
</conbody>
</concept>
