<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="apigw_configuringapi" xml:lang="en-us">
<title>Developing APIs<ph rev="rev760"/></title>
<shortdesc>The <ph conref="apigw_conref.dita#common/idag2nd"/> stores each API as an API definition
configuration. To develop an API, create an API definition.</shortdesc>
<taskbody>
<context>
<p>You can create the following types of API definitions on the <ph
conref="apigw_conref.dita#common/idag2nd"/>:<ul>
<li>The REST API that is compliant with version 2.0 of the Swagger specification.</li>
<li>The OAuth 2.0 provider API that contains the authorization and token endpoints of an OAuth
flow.</li>
</ul></p>
<p>You need to define the following settings that are generic to both types of API.<ul>
<li>The base path on which the API is served. All resources in a REST API are defined relative to
its base path.</li>
<li>Optionally, the MIME types that the API can consume and produce. The MIME type definitions
should be in compliance with RFC 6838. For
example,<systemoutput>application/json</systemoutput>.</li>
<li>A list of paths to the API operations.</li>
<li>Optionally, the alternative security requirements to enforce for the API as a whole (that is,
there is a logical OR between the security requirements). The security requirement that you apply to
your API is the top-level security declaration. By default, the security requirement is applied to
all operations in the API. However, for each API operation, you can override the top-level security
by separately specifying security schemes to enforce on the operation level.</li>
<li>Optionally, the custom API properties.</li>
<li>Optionally, the streaming and flow control mode. Flow control cannot be enabled unless streaming
is enabled. <p>When the <ph conref="apigw_conref.dita#common/apigw"/> sends or receives large static
data, such as images, the memory footprint on <ph
conref="apigw_conref.dita#common/idag2nd"/> can be large. You can reduce the memory
footprint by enabling streaming and flow control. <ul>
<li>When streaming is enabled, the <ph conref="apigw_conref.dita#common/apigw"/> passes message
payloads through without parsing and the <ph conref="apigw_conref.dita#common/idag2nd"/>
does not buffer the entire payload of a message into the memory.</li>
<li>When flow control is enabled, the <ph conref="apigw_conref.dita#common/idag2nd"/> limits the
number of message payloads that are received from the server or client, thereby, avoid too many data
being buffered on <ph conref="apigw_conref.dita#common/idag2nd"/>.</li>
</ul>Data streaming is available when an assembly rule of the API definition meets one of the
following requirements:<ul>
<li>The assembly rule includes only one assembly invoke action. </li>
<li>The assembly rule includes only the assembly actions that never access the
<codeph>message.body</codeph> context variable. The following assembly actions meet this
requirement: <ul>
<li>Assembly switch action</li>
<li>Assembly set variable action</li>
</ul></li>
</ul></p></li>
</ul></p>
<p>For a REST API, you can optionally define the following settings.<ul>
<li>The assembly that controls a specific aspect of processing during API invocation at run
time.</li>
</ul></p>
<p>For an OAuth API, you must also provide a list of OAuth specific settings.</p>
<p>The following procedure instructs how to create an API definition.</p>
</context>
<steps>
<step conref="apigw_conref.dita#commonsteps/search_api">
<cmd/>
</step>
<step>
<cmd>From the search results, select <uicontrol>API Definition</uicontrol>.</cmd>
</step>
<step id="config_add">
<cmd>Click <uicontrol>Add</uicontrol> or <uicontrol>New</uicontrol>.</cmd>
</step>
<step id="config_basicproperties">
<cmd>Define the basic properties: Name, administrative state, and descriptive summary.</cmd>
</step>
<step>
<cmd>Specify the base path, which is relative to the host, where the API is served.</cmd>
</step>
<step importance="optional">
<cmd>Specify the MIME types that the API can consume.</cmd>
</step>
<step importance="optional">
<cmd>Specify the MIME types that the API can produce.</cmd>
</step>
<step>
<cmd>Specify the API paths where the operations are available.</cmd>
</step>
<step importance="optional">
<cmd>Specify the security requirements.</cmd>
</step>
<step importance="optional">
<cmd>Specify the custom API properties.</cmd>
</step>
<step importance="optional">
<cmd>Specify whether to enable streaming.</cmd>
</step>
<step importance="optional">
<cmd>When data streaming is enabled, specify whether to enable flow control.</cmd>
</step>
<step>
<cmd>Select the type of API to create.</cmd>
<choices>
<choice>When you create a REST API, complete the following configuration.<ol>
<li>Specify the assembly.</li>
</ol></choice>
<choice><!--Krithika's team is working on the OAuth API, when implemented, need to update OAuth related information.-->When
you create an OAuth API, complete the following configuration.<ol>
<li>Specify whether the client type is public or confidential.</li>
<li>Specify the OAuth scope.</li>
<li>Select the method to obtain the access token for authorization.</li>
<li>Specify the basic authentication security definition to use to access the API.</li>
<li>Select the method to collect client credentials during the authorization process.</li>
<li>Select the method to grant authorization.</li>
<li>Enter the time that an access token remains valid.</li>
<li>Set whether to enable the use of refresh tokens. When enabled, complete the following settings.<ol>
<li>Specify how many times the refresh token can be requested.</li>
<li>Specify the lifetime of the refresh token.</li>
</ol></li>
<li>Set whether to enable the endpoint for token revocation.</li>
<li>Set whether to enable the endpoint for token retrieval.</li>
</ol></choice>
</choices>
</step>
<step id="config_apply">
<cmd>Click <uicontrol>Apply</uicontrol> to save the changes to the running configuration.</cmd>
</step>
<step id="config_saveconfig">
<cmd>Click <uicontrol>Save Configuration</uicontrol> or <uicontrol>Save changes</uicontrol> to save
the changes to the persisted configuration.</cmd>
</step>
</steps>
</taskbody>
<related-links>
<link href="http://tools.ietf.org/html/rfc6838" format="html" scope="external">
<linktext>RFC 6838: <filepath>https://tools.ietf.org/html/rfc6838</filepath></linktext>
</link>
</related-links>
</task>
