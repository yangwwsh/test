<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="apigw_addingxmltojsonaction" xml:lang="en-us">
<title>Adding a convert XML to JSON action<ph rev="rev760"/></title>
<shortdesc>An XML to JSON action converts the payload of an API context from the extensible markup
language (XML) format to JavaScript Object Notation (JSON) object.
<!--Confirm with Mark about the accuracy of "the payload of an API context"--></shortdesc>
<taskbody>
<context>
<p>The XML to JSON conversion is based on BadgerFish. The XML content is preserved, including the
attributes and namespaces.
<!--
1. "No additional configuration is required"? whether this sentence is needed.
2. From APIc, we have "This action must be attached to the "flow" at the point at which you require the conversion to be performed. For example, if you want to convert an XML-formatted "request" into a JSON-formatted "request", this action must be attached to the "request" flow. ". Now, in APIGW, we don't have "request flow" or "response flow", so any limitation for the API assembly rule, where assembly actions are added?-->.</p>
<p>When this action is triggered, it reads input from the <systemoutput>message.body</systemoutput>
context variable if this context exists. Otherwise, it reads input from the
<systemoutput>request.body</systemoutput> context variable. No additional configuration is required.
The conversion output is stored in the <systemoutput>message.body</systemoutput> context
variable.</p>
</context>
<steps>
<step conref="apigw_conref.dita#commonsteps/search_assembly">
<cmd/>
</step>
<step>
<cmd>From the search results, select <uicontrol>Assembly XML to JSON Action</uicontrol>.</cmd>
</step>
<!--Based on APIC design spike, it seems that in GUI, we don’t need to design any additional properties, like “type = badgerfish”, and “document = an xml file?”-->
<step conref="apigw_conref.dita#commonsteps/config_add">
<cmd/>
</step>
<step conref="apigw_conref.dita#commonsteps/config_basicproperties">
<cmd/>
</step>
</steps>
<example>
<title>Examples</title>
<p>
<ul>
<li>The <codeph>&lt;a>hello&lt;/a></codeph> XML-formatted document is converted to the following
JSON-formatted object.<codeblock>{ "a": { "$" : "hello" } }</codeblock></li>
<li>The <codeph>&lt;a type="world">hello&lt;/a></codeph> XML-formatted document with an attribute is
converted to the following JSON-formatted
object.<codeblock>{ "a": { "$" : "hello", "@type" : "world" } }</codeblock></li>
</ul>
</p>
</example>
</taskbody>
<related-links>
<link href="http://badgerfish.ning.com" format="html" scope="external">
<linktext>BadgerFish</linktext>
</link>
<link href="apigw_contextvariables.dita"/>
</related-links>
</task>
